[tool.poetry]
name = "{{ cookiecutter.name }}"
version = "1.0.0"
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.email }}>"]
license = "MIT"
readme = "README.md"
keywords = ["github", "actions", "python"]
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.hyphenated_name }}"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development"
]

[tool.poetry.dependencies]
python = "^3.8"
environs = "^11.0.0"
PyGithub = "^2.0.0"

[tool.semantic_release]
branch = "main"
version_variable = [
    "src/__init__.py:__version__",
    "pyproject.toml:version",
]
build_command = "pip install poetry && poetry build"
upload_to_pypi = false
upload_to_release = false

[tool.ruff]
target-version = "py38"
line-length = 88
ignore = [
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in `__init__`
    "D401", # First line of docstring should be in imperative mood
]
select = [
    "B",   # flake8-bugbear
    "D",   # flake8-docstrings
    "C4",  # flake8-comprehensions
    "S",   # flake8-bandit
    "F",   # pyflake
    "E",   # pycodestyle
    "W",   # pycodestyle
    "UP",  # pyupgrade
    "I",   # isort
    "RUF", # ruff specific
]
[tool.ruff.per-file-ignores]
"tests/**/*" = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "S101",
]

[tool.ruff.isort]
known-first-party = ["src"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
